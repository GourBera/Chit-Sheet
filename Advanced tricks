dct_list = ['abc', 'cab', 'abcd', 'dcba', 'abcde']

dct = dict()

for i in dct_list:
    dct_len = len(i)
    if dct_len not in dct:
        dct[dct_len] = []
    dct[dct_len].append(i)

or

for i in dct_list:
    dct_len = len(i)
    dct.setdefault(dct_len, []).append(i)
    
print(dct)      # {3: ['abc', 'cab'], 4: ['abcd', 'dcba'], 5: ['abcde']}

#-------------------

frozenset() # immutable
translate
swapcase
maketrans
center
count
casefold
discard
clear
pop
popitem
setdefault

#-------------------

dct = dict(a='20000', d='10', b='300', c='5000')
print(dict(sorted(dct.items(), key=lambda item: item[0])))  # Key
print(dict(sorted(dct.items(), key=lambda item: item[1])))  # Value
print(dict(sorted(dct.items(), key=lambda item: item[1], reverse=True)))  # reverse order

import operator
print(sorted(dct.items(), key=operator.itemgetter(1)))

print(dict(sorted(dct.items(), key=lambda item: len(item[1])))) # Value Len

#-------------------

print(sorted(dct_list, key=len))    # Sort list by len
print(sorted(dct_list, reverse=True))    # Sort list in reverse order

#-------------------

a = [1, 2, 3]
b = [1, 2, 3, 4]
c = [1, 2, 3, 4, 5]

lookup_dict = dict(list1=[a, len(a), 'a'],
                   list2=[b, len(b), 'b'],
                   list3=[c, len(c), 'c'])

print(lookup_dict.get('list1')[0])

#-------------------

d1 = dict(a=1,c=2)
d2 = dict(c=3,d=4)
d3 = dict(e=5,f=6)

merge = {**d1, **d2, **d3}
print(merge)

#-------------------
Bagging -> Simple average
Boosting -> Weighted average


#-------------------


