Bracket vs Dot Notation
& vs |
list(df)



DataFrame:
get_dtype_counts()


df.isin([0, 2])
df.isin({'num_wings': [0, 3]})



s.where(s > 1, 10) => Replace with 10
>> m = df % 3 == 0
>> df.where(m, -df) => all df negative except m

df.query('a > b')

notna()
astype('int64') => type cast

*insert(loc, column, value, allow_duplicates=False)

get_dummies(drop_first=True)
concat(axis=1)

to_datetime(format='%Y%m%d', errors='ignore')
.dt.date
value_counts().idxmax()


Read:
read_sql(query, engine)
read_table('.tsv')


Rename:



Index:




Query:




Sort:




Filter:




Str:




Functions and Attributes
*melt()


--------------------
DataFrame.index => get row count
DataFrame.columns => get column count
DataFrame.shape => get row and column sount


-------NA
isna => Detect missing values
notna => Detect existing (non-missing) values
isnull()
duplicated()

copy(deep=True) => copy df

-------LOC/ILOC
df.loc[['viper', 'sidewinder']] => Access a group of rows and columns by label
df.iloc[:3] => integer-location based indexing

-------ITERATOR
iteritems => iter over columns
iterrows => iter over rows

query => query over df



-------APPLY/MAP
apply => Apply a function along an axis of the DataFrame.
applymap => Apply a function to a Dataframe elementwise.

-------AGG/GROUPBY
df.agg(['sum', 'min']) => Aggregate using one or more operations
df.groupby(['Animal']).mean() => Group DataFrame or Series
df.groupby(level=1).mean() => Multi index

corr => pairwise correlation of columns


-------DROP
df.drop(columns=['B', 'C'], axis=1)
drop_duplicates => keep='first'
duplicated

-------INDEX
reindex(['a','b'])
rename => df.rename(str.lower, axis='columns')

set_index => df.set_index('month')

-------MISSING VALUE
Missing data handling:
dropna(axis=0, how={‘any’, ‘all’}, thresh=None, inplace=False)
fillna(method={'ffill', 'backfill'})












